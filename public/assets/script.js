// Generated by CoffeeScript 1.9.2
(function() {
  var dirty, epsilon, fadeFooter, fadeHeader, footer, footerCurrent, footerDelta, footerTarget, header, headerCurrent, headerDelta, headerTarget, requestUpdate, update;

  header = document.querySelector("header");

  footer = document.querySelector("footer");

  header.style.opacity = headerTarget = headerCurrent = 1;

  footer.style.opacity = footerTarget = footerCurrent = 0;

  headerDelta = footerDelta = 0;

  dirty = false;

  epsilon = 0.0001;

  fadeHeader = function() {
    var opacity;
    opacity = 1 - document.body.scrollTop / header.offsetHeight;
    opacity = opacity * opacity * opacity;
    if ((0 <= opacity && opacity <= 1)) {
      return headerTarget = opacity;
    }
  };

  fadeFooter = function() {
    var opacity, scrollBottom;
    scrollBottom = document.body.scrollTop + window.innerHeight;
    opacity = (scrollBottom - document.body.scrollHeight + footer.offsetHeight) / footer.offsetHeight;
    opacity = opacity * opacity * opacity;
    if ((0 <= opacity && opacity <= 1)) {
      return footerTarget = opacity;
    }
  };

  update = function() {
    dirty = false;
    headerDelta = (headerTarget - headerCurrent) / 5;
    if (Math.abs(headerDelta) > epsilon) {
      header.style.opacity = headerCurrent = headerCurrent + headerDelta;
      requestUpdate();
    }
    footerDelta = (footerTarget - footerCurrent) / 5;
    if (Math.abs(footerDelta) > epsilon) {
      footer.style.opacity = footerCurrent = footerCurrent + footerDelta;
      return requestUpdate();
    }
  };

  requestUpdate = function() {
    if (!dirty) {
      dirty = true;
      return window.requestAnimationFrame(update);
    }
  };

  window.addEventListener("scroll", function() {
    fadeHeader();
    fadeFooter();
    return requestUpdate();
  });

}).call(this);
