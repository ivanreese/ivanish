<!-- @import ../header.kit -->
<script defer src="/assets/codemirror.js"></script>
<link rel="stylesheet" href="/assets/codemirror.css">
<script defer src="/assets/codemirror-coffeescript.js"></script>
<script defer src="/assets/coffeescript.js"></script>
<link rel="stylesheet" href="noise.css">
<script defer src="noise.js"></script>

<main>

  <title>Noise</title>
  
  <p>Noise is super cool. Let's make some. We'll start simple, and build up to some fucking sweet particle swirls.</p>
  <p>We'll be using <a href="http://coffeescript.org">CoffeeScript</a> and the <a href="https://simon.html5.org/dump/html5-canvas-cheat-sheet.html">&lt;canvas&gt; element</a>, but you can use anything that lets you draw pixel-by-pixel.</p>
  
  <section>
    <a id="1">Meet The Editor</a>
    
    <p>The <b>log</b> function prints out text. You can edit the text in the white box.</p>
    <textarea js-repl>
      log "Zzzzzzzzz"
    </textarea>
    
    <p>If you make a mistake, you'll see a message that (hopefully) explains what went wrong.</p>
    <textarea js-repl>
      log "Quoth the raven...
    </textarea>
    
    <p>The rest of this post assumes you can deduce what's going on. Here's that <a href="http://coffeescript.org">CoffeeScript</a> link again. If the following makes sense, you're good to go. If not, well.. give it your best shot, and let your intuitions flourish (or flounder).</p>
    <textarea js-repl>
      makeAdd = (a)-> (b)-> a + b
      add3 = makeAdd 3
      log add3 10
      log add3 " cheers for dynamic types!"
    </textarea>
  </section>
  
  <section>
    <a id="2">Drawing</a>
    
    <p>These editors are set up for easy drawing.</p>
    <ul>
      <li><b>g</b> is the <i>canvas context</i> &nbsp;(<a href="https://simon.html5.org/dump/html5-canvas-cheat-sheet.html">cheatsheet</a>)</li>
      <li><b>cx</b> and <b>cy</b> are the center of the canvas</li>
      <li><b>w</b> and <b>h</b> are the width and height of the canvas</li>
      <li><b>tau</b> is 2π &nbsp;(helpful because <a href="http://tauday.com/tau-manifesto">circle math mostly uses 2π</a>)</li>
    </ul>
    <textarea js-repl js-canvas>
      # Prepare a circle shape
      g.arc cx, cy, h/4, 0, tau
      
      # Draw the current shape
      g.fill()
    </textarea>
    
    <p>They're also set up for easy animation. Fuck yeah!</p>
    <ul>
      <li><b>time</b> is the current time in seconds</li>
      <li><b>%</b> is modulo — it's like division, but it gives you the remainder: &nbsp; 5 % 3 = 2</li>
    </ul>
    <textarea js-repl js-canvas>
      log time, "Time"
      
      zeroToThree = time % 3
      log zeroToThree, "0 to 3"
      
      zeroToThirty = 10 * zeroToThree
      log zeroToThirty, "0 to 30"
      
      g.arc cx, cy, zeroToThirty, 0, tau
      g.fill()
    </textarea>
    
  </section>
  
  <section>
    <a id="3">Let's Draw Stripes</a>
    
    <p>Why stripes? Because we have to start somewhere.</p>
    <textarea js-repl js-canvas>
      x = 0
      stripeSize = 40
      
      while x &lt; w
        g.rect x, 0, stripeSize, h
        x += stripeSize * 2
      
      g.fill()
    </textarea>
    
    <p>We can color the stripes based on their position.</p>
    <textarea js-repl js-canvas>
      x = 0
      stripeSize = 40
      
      while x &lt; w
        # Set the color based on the x position
        lightness = Math.round 255 * x / w
        
        # Make a separate shape for each stripe
        g.beginPath()
        g.fillStyle = "rgb(#{lightness}, #{lightness}, #{lightness})"
        g.rect x, 0, stripeSize, h
        g.fill()
        
        x += stripeSize
    </textarea>
    
    <p>We can pre-compute an array of colors. We want the first stripe to be 0, and the last to be 255.</p>
    <textarea js-repl js-canvas>
      stripeSize = 40
      nStripes = Math.floor w / stripeSize
      
      i = 0
      colors = []
      while i &lt;= nStripes
        colors.push Math.round 255 * i / nStripes
        i++
      
      i = 0
      while i &lt;= nStripes
        g.beginPath()
        c = colors[i]
        g.fillStyle = "rgb(#{c}, #{c}, #{c})"
        g.rect i * stripeSize, 0, stripeSize, h
        g.fill()
        i++

      log colors
    </textarea>
    
    <p>Let's shuffle the array. For performance and consistency, we'll just hard-code this.</p>
    <textarea js-repl js-canvas>
      stripeSize = 40
      nStripes = Math.floor w / stripeSize
      colors = [128,102,153,179,26,166,51,38,140,191,217,64,204,0,115,242,89,77,230,13,255]
      
      i = 0
      while i &lt;= nStripes
        g.beginPath()
        c = colors[i]
        g.fillStyle = "rgb(#{c}, #{c}, #{c})"
        g.rect i * stripeSize, 0, stripeSize, h
        g.fill()
        i++
    </textarea>

    <p>If we have more stripes than colors, we can just repeat the pattern with modulo (%).</p>
    <textarea js-repl js-canvas>
      stripeSize = 5
      nStripes = Math.floor w / stripeSize
      colors = [128,102,153,179,26,166,51,38,140,191,217,64,204,0,115,242,89,77,230,13,255]
      
      i = 0
      while i &lt;= nStripes
        g.beginPath()
        c = colors[i % colors.length]
        g.fillStyle = "rgb(#{c}, #{c}, #{c})"
        g.rect i * stripeSize, 0, stripeSize, h
        g.fill()
        i++
    </textarea>

    <p>Lets make the stripes even narrower, and use a bigger array.</p>
    <textarea js-repl js-canvas>
      stripeSize = 1
      nStripes = Math.floor w / stripeSize
      colors = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180]
      
      i = 0
      while i &lt;= nStripes
        g.beginPath()
        c = colors[i % colors.length]
        g.fillStyle = "rgb(#{c}, #{c}, #{c})"
        g.rect i * stripeSize, 0, stripeSize, h
        g.fill()
        i++
    </textarea>

    <p>2D</p>
    <textarea js-repl js-canvas>
      stepSize = 5
      xSteps = Math.floor w / stepSize
      ySteps = Math.floor h / stepSize
      
      values = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180]
      getValue = (i)-> values[i % values.length]
      
      i = 0
      while i &lt;= xSteps
        j = 0
        while j &lt;= ySteps
          g.beginPath()
          c = getValue(j + getValue(i))
          g.fillStyle = "rgb(#{c}, #{c}, #{c})"
          g.rect i * stepSize, j * stepSize, stepSize, stepSize
          g.fill()
          j++
        i++
    </textarea>

    <p>Interpolating neighbouring random values - 1D</p>
    <textarea js-repl js-canvas>
      stripeSize = 5
      nStripes = Math.floor w / stripeSize
      values = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180]
      getValue = (i)-> values[i % values.length]
      
      x = 0
      while x &lt; w
        g.beginPath()
        i = Math.floor x/stripeSize
        t = x/stripeSize - i
        c0 = getValue i
        c1 = getValue i + 1
        c = Math.round c0 * (1 - t) + c1 * t
        g.fillStyle = "rgb(#{c}, #{c}, #{c})"
        g.rect x, 0, 1, h
        g.fill()
        x++
    </textarea>

    <p>Nicer smoothing function</p>
    <textarea js-repl js-canvas>
      stripeSize = 5
      nStripes = Math.floor w / stripeSize
      values = [151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180]
      getValue = (i)-> values[i % values.length]
      
      x = 0
      while x &lt; w
        g.beginPath()
        i = Math.floor x/stripeSize
        t = x/stripeSize - i
        t = 6 * Math.pow(t,5) - 15 * Math.pow(t,4) + 10 * Math.pow(t,3)
        c0 = getValue i
        c1 = getValue i + 1
        c = Math.round c0 * (1 - t) + c1 * t
        g.fillStyle = "rgb(#{c}, #{c}, #{c})"
        g.rect x, 0, 1, h
        g.fill()
        x++
    </textarea>

  </section>
  
</main>
