<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:itunes="http://www.itunes.com/dtds/podcast-1.0.dtd" version="2.0">
  <channel>
    <title>Hest</title>
    <link>https://ivanish.ca/hest-podcast</link>
    <itunes:author>Ivan Reese</itunes:author>
    <description>Ivan Reese thinks out loud about the design of his esoteric graphical programming system.</description>
    <itunes:subtitle>Ivan Reese thinks out loud about the design of his esoteric graphical programming system.</itunes:subtitle>
    <language>en</language>
    <itunes:category text="Technology"/>
    <itunes:explicit>yes</itunes:explicit>
    <itunes:image href="https://ivanish.s3.amazonaws.com/hest/podcast.png"/>
    <itunes:owner><itunes:name>Ivan Reese</itunes:name><itunes:email>ivanreese@gmail.com</itunes:email></itunes:owner>
    <copyright>Copyright should be abolished.</copyright>

    <lastBuildDate>2 Oct 2021 20:20:00 MST</lastBuildDate>

    <item>
      <guid isPermaLink="false">hest-episode-1</guid>
      <pubDate>22 Mar 2021 00:00:00 MST</pubDate>
      <title>1 • Graphical Programming</title>
      <itunes:title>Graphical Programming</itunes:title>
      <itunes:episode>1</itunes:episode>
      <itunes:duration>00:13:26</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/1.mp3"
        length="6448321"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        The term Visual Programming is a bit of a misnomer. My preference is Graphical Programming, though it is hard to overcome cultural inertia. Oh, also, welcome to the show.
      </itunes:subtitle>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-2</guid>
      <pubDate>29 Mar 2021 00:00:00 MST</pubDate>
      <title>2 • Why?</title>
      <itunes:title>Why?</itunes:title>
      <itunes:episode>2</itunes:episode>
      <itunes:duration>00:13:03</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/2.mp3"
        length="6269044"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Why am I making Hest? Who is it for? When did I start? When will it end? What is it now? Where is it going? And what of this podcast?
      </itunes:subtitle>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-3</guid>
      <pubDate>5 Apr 2021 00:00:00 MST</pubDate>
      <title>3 • Waterslide Kid</title>
      <itunes:title>Waterslide Kid</itunes:title>
      <itunes:episode>3</itunes:episode>
      <itunes:duration>00:13:36</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/3.mp3"
        length="6535234"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Functions and data, conveyance, points and edges, and execution with a mandatory, explicit notion of time and space.
      </itunes:subtitle>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-4</guid>
      <pubDate>12 Apr 2021 00:00:00 MST</pubDate>
      <title>4 • Giant Thumb</title>
      <itunes:title>Giant Thumb</itunes:title>
      <itunes:episode>4</itunes:episode>
      <itunes:duration>00:15:03</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/4.mp3"
        length="7232325"
        type="audio/mpeg"
      />
      <itunes:explicit>yes</itunes:explicit>
      <itunes:subtitle>
        Grab the giant thumb, push it all the way to infinity at the top, or negative infinity at the bottom.
      </itunes:subtitle>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-5</guid>
      <pubDate>19 Apr 2021 00:00:00 MST</pubDate>
      <title>5 • The Space</title>
      <itunes:title>The Space</itunes:title>
      <itunes:episode>5</itunes:episode>
      <itunes:duration>00:19:37</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/5.mp3"
        length="9424137"
        type="audio/mpeg"
      />
      <itunes:explicit>yes</itunes:explicit>
      <itunes:subtitle>
        Fully explore the space of your designs, even if it makes you into an infamous grump. Also, I sometimes make up jargon like Graphical Programming, and today we have another: Participatory Execution. Finally, Wallace &amp; Gromit have their long-awaited debut on the show.
      </itunes:subtitle>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-6</guid>
      <pubDate>26 Apr 2021 00:00:00 MST</pubDate>
      <title>6 • No Moon</title>
      <itunes:title>No Moon</itunes:title>
      <itunes:episode>6</itunes:episode>
      <itunes:duration>00:26:54</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/6.mp3"
        length="12915283"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Virtual edges and pocket dimensions might be key pieces of a workable approach to abstraction, something that Hest sorely lacks.
      </itunes:subtitle>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-7</guid>
      <pubDate>3 May 2021 00:00:00 MST</pubDate>
      <title>7 • Focus Mode</title>
      <itunes:title>Focus Mode</itunes:title>
      <itunes:episode>7</itunes:episode>
      <itunes:duration>00:18:44</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/7.mp3"
        length="8992810"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Data as player character. Continuity and intimacy. The well of video games. Putting your finger on the data and following it from birth to death. A patchwork quilt of understanding, versus a single continuous thread.
      </itunes:subtitle>
      <description>
        Data as player character. Continuity and intimacy. The well of video games. Putting your finger on the data and following it from birth to death. A patchwork quilt of understanding, versus a single continuous thread.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-8</guid>
      <pubDate>8 May 2021 00:00:00 MST</pubDate>
      <title>8 • SpaceChem</title>
      <itunes:title>Focus Mode</itunes:title>
      <itunes:episode>8</itunes:episode>
      <itunes:duration>00:09:53</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/8.mp3"
        length="4747609"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Hest owes more to SpaceChem than any other inspiration. It's a beautiful little gem of a game, released by Zachtronics back in 2011. SpaceChem challenges you to design, develop, and debug complex systems, with an interface that looks a bit like a node-and-wire visual programming language. But the feel of playing it is wholly unique, and worth reflecting on and drawing from.
      </itunes:subtitle>
      <description>
        Hest owes more to SpaceChem than any other inspiration. It's a beautiful little gem of a game, released by Zachtronics back in 2011. SpaceChem challenges you to design, develop, and debug complex systems, with an interface that looks a bit like a node-and-wire visual programming language. But the feel of playing it is wholly unique, and worth reflecting on and drawing from.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-9</guid>
      <pubDate>15 May 2021 00:00:00 MST</pubDate>
      <title>9 • Uncoordinated Anthill</title>
      <itunes:title>Uncoordinated Anthill</itunes:title>
      <itunes:episode>9</itunes:episode>
      <itunes:duration>00:16:10</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/9.mp3"
        length="7768337"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Hest is a long way from finished — a long way from viable, even. It's still riddled with design issues. Let's take a look at one of the big ones: with the current design, there are no mechanisms for coordination. Introducing some of the most obvious coordination mechanisms would violate the spirit of Hest. How should that be fixed? Tune in next week!
      </itunes:subtitle>
      <description>
        Hest is a long way from finished — a long way from viable, even. It's still riddled with design issues. Let's take a look at one of the big ones: with the current design, there are no mechanisms for coordination. Introducing some of the most obvious coordination mechanisms would violate the spirit of Hest. How should that be fixed? Tune in next week!
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-10</guid>
      <pubDate>22 May 2021 22:00:00 MST</pubDate>
      <title>10 • Fibers</title>
      <itunes:title>Fibers</itunes:title>
      <itunes:episode>10</itunes:episode>
      <itunes:duration>00:14:07</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/10.mp3"
        length="6776715"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Lots of anthills, and a handful of cake too.
      </itunes:subtitle>
      <description><![CDATA[
        Last episode, we looked at how the edges-conveying-points execution model leads to problems of synchronization. If you change some small part of your program so that it takes a little longer for data to traverse than it did before, then data leaving that small part will be behind schedule (so to speak) for wherever it needs to go next. Local changes cause non-local effects.

This problems exists because, at the moment, a function (node / point) will execute the moment data arrives at it — so for a function to take two arguments, there needs to be two data points that arrive at that function simultaneously.

Another issue comes when an in-development Hest program, which might be running at some much-slowed down speed, needs to pull in data from the outside world. Data from the outside world arrives at whatever speed it arrives at, slow-mo be damned.

For both issues, I'm feeling the need to add sync primitives, queuing/buffering, and other mechanisms for temporal coordination. But I don't like the way these solutions feel, so I'm trying to find other things that feel different.

This episode looks at one such different-feeling approach: get away from the idea of points travelling along edges! Instead, treat the edges like "fibers" (a la fiber optics), which assume the value of data conveyed to them and instantly convey that data onward. The data, no longer chopped into discrete points, no longer needs to be coordinated so strictly. Functions that are fed solely by these "fiber"-like edges will always have the most recent value available to them on every inbound edge, so they can produce a new output value the instant any single inbound value changes. No need to coordinate multiple pieces of data to arrive at a function simultaneously.

Also — hi! I'm writing a much longer description than normal because my explanations within the episode are a little… weak. That's the deal. This podcast is just me thinking out loud, no plan, no script. It's doodles in the notebook. In the moment that I record, I am just talking extemporaneously, which is surprisingly hard. I have very little grasp on how much context I've already shared on previous episodes, or even how well I'm outlining the body of each new idea. I expect this disorganization is only going to get more pronounced as I get away from super high-level, welcome-to-Hest basics and dive more into the ideas I'm still unsure about and problems I don't really comprehend. We'll have to see! So in the future, if I feel I've done a mediocre job in the show, be sure to check the show notes for another crack.
      ]]></description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-11</guid>
      <pubDate>29 May 2021 19:00:00 MST</pubDate>
      <title>11 • Reconcile</title>
      <itunes:title>Reconcile</itunes:title>
      <itunes:episode>11</itunes:episode>
      <itunes:duration>00:09:30</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/11.mp3"
        length="4563262"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Each part of the whole can have different philosophies.
      </itunes:subtitle>
      <description>
        Each part of the whole can have different philosophies.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-12</guid>
      <pubDate>5 Jun 2021 18:00:00 MST</pubDate>
      <title>12 • Not the Goal</title>
      <itunes:title>Not the Goal</itunes:title>
      <itunes:episode>12</itunes:episode>
      <itunes:duration>00:16:12</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/12.mp3"
        length="7776875"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Driven by principles, driving on engineering.
      </itunes:subtitle>
      <description>
        Caution: This episode may qualify as ASMR content. It might also qualify as irritating, sophmoric philosophizing. But as the previous few episodes have run aground on the muddy bank of the design space, I'm marking the occasion by establishing firmly that WHILST PERFECT IS NOT THE POINT, NOR IS GOOD. And now that that's out of my system, we're going to (in the upcoming episodes) jump back to the center and venture outward along an entirely new axis. Though that Ira Glass quote is fucking fire, hey?
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-13</guid>
      <pubDate>12 Jun 2021 18:40:00 MST</pubDate>
      <title>13 • Begin Third Batch</title>
      <itunes:title>Begin Third Batch</itunes:title>
      <itunes:episode>13</itunes:episode>
      <itunes:duration>00:19:28</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/13.mp3"
        length="9345025"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        A real grab bag episode. Closing some threads on fibers, fine find and replace, how this show gets made, and what we get to look forward to next.
      </itunes:subtitle>
      <description><![CDATA[
        My blog post about different approaches to rewind: https://ivanish.ca/hest-time-travel

Enso: https://enso.org

Places to contact me with feedback: https://twitter.com/spiralganglion • https://futureofcoding.org/community • ivanreese@gmail.com
      ]]></description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-14</guid>
      <pubDate>19 Jun 2021 12:10:00 MST</pubDate>
      <title>14 • The Pit of Your Stomach</title>
      <itunes:title>The Pit of Your Stomach</itunes:title>
      <itunes:episode>14</itunes:episode>
      <itunes:duration>00:14:27</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/14.mp3"
        length="6941407"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Why not just make all data points take the same amount of time to convey along every path?
      </itunes:subtitle>
      <description>
        Why not just make all data points take the same amount of time to convey along every path?
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-15</guid>
      <pubDate>26 Jun 2021 11:20:00 MST</pubDate>
      <title>15 • One (Hundred) Rendering Trees</title>
      <itunes:title>One (Hundred) Rendering Trees</itunes:title>
      <itunes:episode>15</itunes:episode>
      <itunes:duration>00:15:02</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/15.mp3"
        length="7218201"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Glamorous Toolkit has an interesting approach to rendering, a good contrast to the approach I'm taking with Hest.
      </itunes:subtitle>
      <description>
        • Glamorous Toolkit's One Rendering Tree: https://medium.com/feenk/one-rendering-tree-918eae49bcff
        • Natto: https://natto.dev
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-16</guid>
      <pubDate>3 Jul 2021 17:00:00 MST</pubDate>
      <title>16 • Pluggable Dog</title>
      <itunes:title>Pluggable Dog</itunes:title>
      <itunes:episode>16</itunes:episode>
      <itunes:duration>00:14:02</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/16.mp3"
        length="6743458"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Hest's approach to rendering: a pluggable "renderer" abstraction, with bespoke renderers for any given platform or backend that you might want to use, and a protocol for nesting renderers.
      </itunes:subtitle>
      <description>
        Zdog: https://zzz.dog

        Also — looking back on this episode after the fact (a few weeks after recording it, having spend the past few weeks thinking more about rendering), my thoughts on what would make for the best approach have changed. I'm already trying a new prototype with a different approach. This should serve as a reminder to myself (and such constant reminders are needed) that I ought to be very careful about speaking with undue certainty. I like to say that something *will* happen, when actually I just plan to attempt it, assuming my plans don't change. Of course, my plans always change. But that's the point of this podcast — it documents an ongoing design process. It's all talk of plans punctuated by small spurts of progress.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-17</guid>
      <pubDate>10 Jul 2021 12:00:00 MST</pubDate>
      <title>17 • requestAnimationFroop</title>
      <itunes:title>requestAnimationFroop</itunes:title>
      <itunes:episode>17</itunes:episode>
      <itunes:duration>00:15:26</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/17.mp3"
        length="7410882"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Shut it down!
      </itunes:subtitle>
      <description>
        Most games, and game-like software, use a constantly-running main loop to handle input, update their internal state, and produce an ever-changing result for the user. With Hest I'm taking a different approach, designed to reduce the idle power consumption to a minimum.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-18</guid>
      <pubDate>17 Jul 2021 19:00:00 MST</pubDate>
      <title>18 • How Hest Code Is Executed</title>
      <itunes:title>How Hest Code Is Executed</itunes:title>
      <itunes:episode>18</itunes:episode>
      <itunes:duration>00:12:36</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/18.mp3"
        length="6053958"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        In detail, here's how Hest's evaluator advances the simulation state. This episode covers the simple parts. Next week, we'll look at the emergent chaotic bits.
      </itunes:subtitle>
      <description>
        In detail, here's how Hest's evaluator advances the simulation state. This episode covers the simple parts. Next week, we'll look at the emergent chaotic bits.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-19</guid>
      <pubDate>24 Jul 2021 20:30:00 MST</pubDate>
      <title>19 • Excess Unwanted Growth</title>
      <itunes:title>Excess Unwanted Growth</itunes:title>
      <itunes:episode>19</itunes:episode>
      <itunes:duration>00:17:41</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/19.mp3"
        length="8488025"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        A sort of metaprogramming that emerged from Hest's graphic and execution models.
      </itunes:subtitle>
      <description>
        Yes, I know it's pronounced "bez-ee-ay" not "bez-ee-er" but old habits die hard.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-20</guid>
      <pubDate>1 Aug 2021 20:30:00 MST</pubDate>
      <title>20 • Numerical Precision</title>
      <itunes:title>Numerical Precision</itunes:title>
      <itunes:episode>20</itunes:episode>
      <itunes:duration>00:16:30</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/20.mp3"
        length="7923061"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Hest does most of its math using integers, not floats. Why?
      </itunes:subtitle>
      <description>
        Issues with floats, Conal Elliott's FRP, 3:2 Pulldown, quantization, keeping things consistent whether running at "full speed" or in super slow motion.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-21</guid>
      <pubDate>7 Aug 2021 21:50:00 MST</pubDate>
      <title>21 • Terminology</title>
      <itunes:title>Terminology</itunes:title>
      <itunes:episode>21</itunes:episode>
      <itunes:duration>00:23:06</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/21.mp3"
        length="11091587"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Point, dot, position? Edge, wire, path? And, whence Hest?
      </itunes:subtitle>
      <description>
        Point, dot, position? Edge, wire, path? And, whence Hest?
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-22</guid>
      <pubDate>15 Aug 2021 21:00:00 MST</pubDate>
      <title>22 • Niceties Now or Later?</title>
      <itunes:title>Niceties Now or Later?</itunes:title>
      <itunes:episode>22</itunes:episode>
      <itunes:duration>00:10:50</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/22.mp3"
        length="5200198"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Should nice, fun, playful tools and capabilities be built directly in the editor now? Or should those things be held back, waiting until the language model is robust enough to build them within it?
      </itunes:subtitle>
      <description>
        Should nice, fun, playful tools and capabilities be built directly in the editor now? Or should those things be held back, waiting until the language model is robust enough to build them within it?
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-23</guid>
      <pubDate>21 Aug 2021 23:00:00 MST</pubDate>
      <title>23 • Barnacles</title>
      <itunes:title>Barnacles</itunes:title>
      <itunes:episode>23</itunes:episode>
      <itunes:duration>00:11:02</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/23.mp3"
        length="5299402"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle>
        Speculating on nice affordances for programmers to hook into Hest's editor features.
      </itunes:subtitle>
      <description>
        Speculating on nice affordances for programmers to hook into Hest's editor features.
      </description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-24</guid>
      <pubDate>28 Aug 2021 23:17:00 MST</pubDate>
      <title>24 • Hest's Approach to Static Type Checking</title>
      <itunes:title>Hest's Approach to Static Type Checking</itunes:title>
      <itunes:episode>24</itunes:episode>
      <itunes:duration>00:10:16</itunes:duration>
      <enclosure
        url="https://ivanish.s3.amazonaws.com/hest/24.mp3"
        length="4927890"
        type="audio/mpeg"
      />
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle><![CDATA[
        On cake, and the eating of it.
      ]]></itunes:subtitle>
      <description><![CDATA[
        I have an idea for a feature called "accelerator functions", which are functions that define behaviour both within Hest itself and within the underlying runtime Hest sits atop (JavaScript, maybe someday "et al" too). Accelerators give you a way to write some heavily-constrained code that can run extra fast (directly against JS), but that can still be viewed and debugged as full-on Hest graphical code (which normally has a ton of overhead). This episode only discusses the feature in brief. The bulk of the episode uses accelerator functions as a lens to examine Hest's approach to static type checking, correctness guarantees, and the footguns you run into in their absence.
      ]]></description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-25</guid>
      <pubDate>4 Sep 2021 22:00:00 MST</pubDate>
      <title>25 • We Can Put Lipstick on Our Pigs</title>
      <itunes:title>We Can Put Lipstick on Our Pigs</itunes:title>
      <itunes:episode>25</itunes:episode>
      <itunes:duration>00:16:30</itunes:duration>
      <enclosure url="https://ivanish.s3.amazonaws.com/hest/25.mp3" length="7924330" type="audio/mpeg"/>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle><![CDATA[
        Listener questions? Send 'um in!
      ]]></itunes:subtitle>
      <description><![CDATA[
        Listener questions? Send 'um in!
        • @spiralganglion
        • ivanreese@gmail.com

        Hest's data model is simple, very simple, but not so simple as to avoid a digression into AoS vs SoA. Properties are our springboard into the main topic: what is to be done about the interface? A sidebar is a recipe for spooky action, and I don't like spooky action, and I definitely don't like meat.
      ]]></description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-26</guid>
      <pubDate>12 Sep 2021 21:00:00 MST</pubDate>
      <title>26 • As a Library</title>
      <itunes:title>As a Library</itunes:title>
      <itunes:episode>26</itunes:episode>
      <itunes:duration>00:19:38</itunes:duration>
      <enclosure url="https://ivanish.s3.amazonaws.com/hest/26.mp3" length="9423309" type="audio/mpeg"/>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle><![CDATA[
        What if Hest was a library you could call from JavaScript?
      ]]></itunes:subtitle>
      <description><![CDATA[
        • A strange kind of not invented here.
        • "Easy to reason about" — quarter in the swear jar.
      ]]></description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-27</guid>
      <pubDate>19 Sep 2021 15:40:00 MST</pubDate>
      <title>27 • Soft Ideas</title>
      <itunes:title>Soft Ideas</itunes:title>
      <itunes:episode>27</itunes:episode>
      <itunes:duration>00:14:30</itunes:duration>
      <enclosure url="https://ivanish.s3.amazonaws.com/hest/27.mp3" length="6959372" type="audio/mpeg"/>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle><![CDATA[
        How ideas solidify as you think about them.
      ]]></itunes:subtitle>
      <description><![CDATA[
        How ideas solidify as you think about them.
      ]]></description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-28</guid>
      <pubDate>25 Sep 2021 22:10:00 MST</pubDate>
      <title>28 • Functions</title>
      <itunes:title>Functions</itunes:title>
      <itunes:episode>28</itunes:episode>
      <itunes:duration>00:26:20</itunes:duration>
      <enclosure url="https://ivanish.s3.amazonaws.com/hest/28.mp3" length="12638482" type="audio/mpeg"/>
      <itunes:explicit>no</itunes:explicit>
      <itunes:subtitle><![CDATA[
        Listener question: What's the current plan for functions in Hest?
      ]]></itunes:subtitle>
      <description><![CDATA[
        Listener question: What's the current plan for functions in Hest?
      ]]></description>
    </item>

    <item>
      <guid isPermaLink="false">hest-episode-29</guid>
      <pubDate>2 Oct 2021 20:20:00 MST</pubDate>
      <title>29 • Some Good Tools</title>
      <itunes:title>Some Good Tools</itunes:title>
      <itunes:episode>29</itunes:episode>
      <itunes:duration>00:23:49</itunes:duration>
      <enclosure url="https://ivanish.s3.amazonaws.com/hest/29.mp3" length="11435324" type="audio/mpeg"/>
      <itunes:explicit>yes</itunes:explicit>
      <itunes:subtitle><![CDATA[
        The only thing easier than making better tools for working with wires… is insisting that it'd be easy to make better tools for working with wires.
      ]]></itunes:subtitle>
      <description><![CDATA[
        The only thing easier than making better tools for working with wires… is insisting that it'd be easy to make better tools for working with wires.
      ]]></description>
    </item>

  </channel>
</rss>
